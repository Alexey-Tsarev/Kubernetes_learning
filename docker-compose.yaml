version: '3'

services:
  web-server:
    container_name: web-server
    image: quay.io/myafk/interactive:stable
    command: ["interactive", "ingress"]
    environment:
      REDIS_SLAVE_HOST: redis-slave
      REDIS_MASTER_HOST: redis-master
#      KUBERNETES_SERVICE_HOST: any string here
#      KUBERNETES_SERVICE_PORT: any thing here
      KUBERNETES_SERVICE_HOST: 10.0.0.1
      KUBERNETES_SERVICE_PORT: 443
      KUBERNETES_SERVICE_PORT_HTTPS: 443
      ELASTICSEARCH_HOSTS: http://es01:9200
    ports:
      - 8085:8085

  redis-master:
    container_name: redis-master
    image: redis
    ports:
      - 6379:6379
    sysctls:
      net.core.somaxconn: '511'

  redis-slave:
    container_name: redis-slave
    image: redis
    command: bash -c "redis-server --slaveof $$REDIS_MASTER_HOST 6379"
    environment:
      REDIS_MASTER_HOST: "redis-master"
    ports:
      - 6379:6379
    sysctls:
      net.core.somaxconn: '511'

  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
    ports:
      - 9200:9200

  es02:
    container_name: es02
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
    ports:
      - 9200

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.1.1
    environment:
      ELASTICSEARCH_HOSTS: http://es01:9200
    ports:
      - 5601:5601
